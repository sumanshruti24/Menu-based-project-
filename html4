<!DOCTYPE html>

<html lang="en">

<head>

    <meta charset="UTF-8">

    <meta name="viewport" content="width=device-width, initial-scale=1.0">

    <title>Docker Management</title>

    <link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet">

    <style>

        body {

            background-color: #1a1c20;

            color: #e0e0e0;

            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;

        }



        .loader {

            border: 4px solid #f3f3f3;

            border-radius: 50%;

            border-top: 4px solid #3498db;

            width: 30px;

            height: 30px;

            -webkit-animation: spin 2s linear infinite;

            animation: spin 2s linear infinite;

            margin: 0 auto;

        }



        @-webkit-keyframes spin {

            0% {

                -webkit-transform: rotate(0deg);

            }

            100% {

                -webkit-transform: rotate(360deg);

            }

        }



        @keyframes spin {

            0% {

                transform: rotate(0deg);

            }

            100% {

                transform: rotate(360deg);

            }

        }



        .header {

            background-color: #374151;

            color: #ffffff;

            text-align: center;

            padding: 1rem;

            border-bottom: 1px solid #4a5568;

        }



        .header h1 {

            font-size: 3rem;

            font-weight: bold;

            margin-bottom: 0.5rem;

        }



        .header a {

            text-decoration: none;

            color: #ffffff;

            background-color: #4a5568;

            padding: 0.5rem 1rem;

            border-radius: 0.25rem;

            transition: background-color 0.3s ease;

        }



        .header a:hover {

            background-color: #6b7280;

        }



        .section-title {

            font-size: 2.5rem;

            font-weight: bold;

            margin-bottom: 1rem;

        }



        .button {

            background-color: #4c51bf;

            color: #ffffff;

            padding: 1rem 2rem;

            border-radius: 0.5rem;

            cursor: pointer;

            transition: background-color 0.3s ease;

        }



        .button:hover {

            background-color: #5759c1;

        }



        .input-field {

            border: 1px solid #d1d5db;

            background-color: #ffffff;

            padding: 1rem;

            border-radius: 0.5rem;

            margin-bottom: 1rem;

            color: #1a202c;

            width: 100%;

            max-width: 400px;

        }



        .output {

            border: 1px solid #d1d5db;

            background-color: #f3f4f6;

            padding: 1rem;

            border-radius: 0.5rem;

            margin-top: 1rem;

            max-height: 300px;

            overflow-y: auto;

        }

    </style>

</head>

<body>

    <header class="header">

        <h1>üê≥ Docker Management üê≥</h1>

        <a href="http://10.10.10.7/index01.html" class="button">üè† HOME</a>

    </header>

    <main class="container mx-auto mt-10 px-4">

        <!-- Docker Images Section -->

        <section class="bg-gray-800 shadow-lg rounded-lg p-8 mb-10">

            <h2 class="section-title">Pulled Images üñºÔ∏è</h2>

            <div class="flex flex-col md:flex-row items-center md:justify-between mb-6 space-y-4 md:space-y-0">

                <input type="text" id="imageName" class="input-field" placeholder="Enter Image Name">

                <div class="flex space-x-4">

                    <button id="pullImage" onclick="PullImage()" class="button">üîç Pull Image</button>

                    <button id="getAllImages" onclick="GetAllImages()" class="button">üìö Get All Images</button>

                    <button id="showRunningContainers" onclick="getAllRunningContainers()" class="button">üîÑ Show Running Containers</button>

                </div>

            </div>

            <div id="loading" class="loader" style="display: none;"></div>

            <div id="getOutput" class="output" style="color:black"></div>

        </section>

        <!-- Container Management Section -->

        <section class="grid grid-cols-1 md:grid-cols-3 gap-10">

            <div class="bg-gray-800 shadow-lg rounded-lg p-8">

                <h2 class="section-title">Launch a Container üöÄ</h2>

                <input type="text" id="launchAnContainer" class="input-field" placeholder="Enter Container Name">

                <button id="launchContainer" onclick="launchAnContainer()" class="button">üöÄ Launch a Container</button>

            </div>

            <div class="bg-gray-800 shadow-lg rounded-lg p-8">

                <h2 class="section-title">Start Container ‚ñ∂Ô∏è</h2>

                <input type="text" id="containerNameStart" class="input-field" placeholder="Enter Container Name">

                <button id="startContainer" onclick="StartContainer()" class="button">‚ñ∂Ô∏è Start Container</button>

            </div>

            <div class="bg-gray-800 shadow-lg rounded-lg p-8">

                <h2 class="section-title">Stop Container ‚èπÔ∏è</h2>

                <input type="text" id="containerNameStop" class="input-field" placeholder="Enter Container Name">

                <button id="stopContainer" onclick="StopContainer()" class="button">‚èπÔ∏è Stop Container</button>

            </div>

        </section>

    </main>

    <script>

        function showLoader() {

            document.getElementById("loading").style.display = "block";

        }



        function hideLoader() {

            document.getElementById("loading").style.display = "none";

        }



        function GetAllImages() {

            showLoader();

            const url = "http://10.10.10.7/cgi-bin/docker.py?cmd=docker%20images";

            const xhr = new XMLHttpRequest();

            xhr.open("GET", url, true);

            xhr.onreadystatechange = function () {

                if (xhr.readyState == 4) {

                    hideLoader();

                    if (xhr.status == 200) {

                        document.getElementById("getOutput").innerHTML = xhr.responseText;

                    } else {

                        console.log(xhr.response);

                        document.getElementById("getOutput").innerHTML = "Something went wrong";

                    }

                }

            };

            xhr.send();

        }



        function PullImage() {

            showLoader();

            const imageName = document.getElementById("imageName").value;

            const url = `http://10.10.10.7/cgi-bin/docker.py?cmd=docker%20pull%20${imageName}`;

            const xhr = new XMLHttpRequest();

            xhr.open("GET", url, true);

            xhr.onreadystatechange = function () {

                if (xhr.readyState == 4) {

                    hideLoader();

                    if (xhr.status == 200) {

                        document.getElementById("getOutput").innerHTML = xhr.responseText;

                    } else {

                        console.log(xhr.response);

                        document.getElementById("getOutput").innerHTML = "Something went wrong";

                    }

                }

            };

            xhr.send();

        }



        function StartContainer() {

            showLoader();

            const containerName = document.getElementById("containerNameStart").value;

            const url = `http:/10.10.10.7/cgi-bin/docker.py?cmd=docker%20start%20${containerName}`;

            const xhr = new XMLHttpRequest();

            xhr.open("GET", url, true);

            xhr.onreadystatechange = function () {

                if (xhr.readyState == 4) {

                    hideLoader();

                    if (xhr.status == 200) {

                        document.getElementById("getOutput").innerHTML = xhr.responseText;

                    } else {

                        console.log(xhr.response);

                        document.getElementById("getOutput").innerHTML = "Something went wrong";

                    }

                }

            };

            xhr.send();

        }



        function StopContainer() {

            showLoader();

            const containerName = document.getElementById("containerNameStop").value;

            const url = `http://10.10.10.7/cgi-bin/docker.py?cmd=docker%20stop%20${containerName}`;

            const xhr = new XMLHttpRequest();

            xhr.open("GET", url, true);

            xhr.onreadystatechange = function () {

                if (xhr.readyState == 4) {

                    hideLoader();

                    if (xhr.status == 200) {

                        document.getElementById("getOutput").innerHTML = xhr.responseText;

                    } else {

                        console.log(xhr.response);

                        document.getElementById("getOutput").innerHTML = "Something went wrong";

                    }

                }

            };

            xhr.send();

        }



        function getAllRunningContainers() {

          showLoader();

            const url = "http://10.10.10.7/cgi-bin/docker.py?cmd=docker%20ps";

            const xhr = new XMLHttpRequest();

            xhr.open("GET", url, true);

            xhr.onreadystatechange = function () {

                if (xhr.readyState == 4) {

                    hideLoader();

                    if (xhr.status == 200) {

                        document.getElementById("getOutput").innerHTML = xhr.responseText;

                    } else {

                        console.log(xhr.response);

                        document.getElementById("getOutput").innerHTML = "Something went wrong";

                    }

                }

            };

            xhr.send();

        }

    </script>

</body>

</html>

